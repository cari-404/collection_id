name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Run tests
      run: |
        sudo apt update
        sudo apt install gcc-mingw-w64 libc6-dev-i386 libssl-dev:i386 -y
        rustup update
        rustup target add i686-pc-windows-gnu
        rustup target add x86_64-pc-windows-gnu
        rustup target add i686-unknown-linux-gnu
    - name: Cargo 
      run: |
        cargo build --release --target x86_64-unknown-linux-gnu
        cargo build --release --target i686-pc-windows-gnu
        cargo build --release --target x86_64-pc-windows-gnu
        cargo build --release --target i686-unknown-linux-gnu
    - name: Run tests
      run: ls -R

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: main32.exe
        path: |
          ./target/i686-pc-windows-gnu/release/main.exe

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: main64.exe
        path: |
          ./target/x86_64-pc-windows-gnu/release/main.exe

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: main32
        path: |
          ./target/i686-unknown-linux-gnu/release/main

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: main64
        path: |
          ./target/x86_64-unknown-linux-gnu/release/main

  upload_to_release:
    name: Upload to Release
    needs: [build]  # Menunggu kedua pekerjaan selesai
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: main32
        path: main32
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: main64
        path: main64
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: main32.exe
        path: main32.exe
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: main64.exe
        path: main64.exe
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.3
        release_name: version 1.0.3

    - name: Upload Release Artifact Pringgodani
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: main32.exe
        asset_name: main32.exe
        asset_content_type: application/x-msdownload
    - name: Upload Release Artifact Pringgodani
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: main64.exe
        asset_name: main64.exe
        asset_content_type: application/x-msdownload
    - name: Upload Release Artifact Pringgodani
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: main32
        asset_name: main32
        asset_content_type: application/x-elf
    - name: Upload Release Artifact Pringgodani
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: main64
        asset_name: main64
        asset_content_type: application/x-elf
