name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Android-aarch64
            os: ubuntu-20.04
            target: aarch64-linux-android
            bin: main-linux-android-arm64
          - os_name: Linux-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            bin: main-linux-arm64
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: main-linux-amd64
          - os_name: Linux-i686
            os: ubuntu-20.04
            target: i686-unknown-linux-gnu
            bin: main-linux-i686
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: main-amd64.exe
          - os_name: Windows-i686
            os: windows-latest
            target: i686-pc-windows-msvc
            bin: main-i686.exe
        toolchain:
          - stable
    steps:
    - uses: actions/checkout@v3
    - name: Dependency
      if: matrix.platform.os_name == 'Linux-i686'
      run: |
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install gcc-mingw-w64 libc6-dev-i386 libssl-dev:i386 -y
    - name: Dependency
      if: matrix.platform.os_name == 'Android-aarch64'
      run: |
        java --version
        sudo apt update && sudo apt install -y nano git curl unzip
        sudo apt remove -y temurin-11-jdk temurin-11-jre
        sudo apt install -y openjdk-17-jdk openjdk-17-jre
        java --version
        mkdir $HOME/Android && \
        cd $HOME/Android && \
        mkdir sdk && \
        wget -O sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip && \
        unzip sdk-tools.zip && rm sdk-tools.zip && \
        mv cmdline-tools ./sdk/tools && \
        cd ./sdk/tools/bin && yes | ./sdkmanager --licenses && \
        ./sdkmanager "build-tools;29.0.2" "patcher;v4" "platform-tools" "platforms;android-29" "sources;android-29" "ndk-bundle" && \
        echo "export ANDROID_SDK=\$HOME/Android/sdk" >> $HOME/.bashrc && \
        echo "export ANDROID_NDK=\$ANDROID_SDK/ndk-bundle" >> $HOME/.bashrc && \
        echo "export PATH=\$PATH:\$ANDROID_SDK/platform-tools:\$ANDROID_SDK/tools/bin" >> $HOME/.bashrc && \
        source $HOME/.bashrc && cd $HOME
        cp config $HOME/.cargo/config
    - name: Convert
      if: matrix.platform.os_name != 'Windows-x86_64' && matrix.platform.os_name != 'Windows-i686' && matrix.platform.os_name != 'Linux-x86_64'
      run: |
        rm Cargo.toml
        mv cross.toml Cargo.toml
    - name: Build binary
      uses: houseabsolute/actions-rust-cross@v0
      with:
        command: "build"
        target: ${{ matrix.platform.target }}
        toolchain: ${{ matrix.toolchain }}
        args: "--release"
        strip: true

    - name: Run tests
      run: ls -R

    - name: Rename binary (linux and macos)
      run: mv target/${{ matrix.platform.target }}/release/main target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
      if: matrix.platform.os_name != 'Windows-x86_64' && matrix.platform.os_name != 'Windows-i686'
    - name: Rename binary (windows)
      run: mv target/${{ matrix.platform.target }}/release/main.exe target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
      if: matrix.platform.os_name == 'Windows-x86_64'
    - name: Rename binary (windows)
      run: mv target/${{ matrix.platform.target }}/release/main.exe target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
      if: matrix.platform.os_name == 'Windows-i686'
    - name: Generate SHA-256
      run: shasum -a 256 target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} | cut -d ' ' -f 1 > target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}.sha256
    - name: Release binary and SHA-256 checksum to GitHub
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.1.1-test
        files: |
          target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
          target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}.sha256
